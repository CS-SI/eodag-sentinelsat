---
  !provider
name: scihub
priority: 0
api: !plugin
  type: SentinelsatAPI
  endpoint: 'https://scihub.copernicus.eu/apihub/'
  dont_quote:
    - '['
    - ']'
    - '$'
    - '='
    - '&'
    - ':'
  pagination:
    next_page_url_tpl: '{url}/odata/v1/Products?{search}&$top={items_per_page}&$skip={skip}'
    total_items_nb_key_path: 'https://scihub.copernicus.eu/apihub/odata/v1/Products/$count'
  results_entry: 'value'
  # literal_search_params:
  #   $format: json
  # free_text_search_operations:
  #   $search:
  #     union: ' OR '
  #     wrapper: '"{}"'
  #     operations:
  #       AND:
  #         - 'footprint:"Intersects({geometry#to_wkt})"'
  #         - '( (platformname:{platform} AND producttype:{productType}) )'
  #         - '( cloudcoverpercentage:[0 TO {cloudCover}] )'
  #         - '( beginPosition:[{startTimeFromAscendingNode#to_iso_utc_datetime} TO {completionTimeFromAscendingNode#to_iso_utc_datetime}] AND endPosition:[{startTimeFromAscendingNode#to_iso_utc_datetime} TO {completionTimeFromAscendingNode#to_iso_utc_datetime}] )'
  #         - '( {raw} )'
  #         - '({id#remove_extension})'
  discover_metadata:
    auto_discovery: true
    metadata_pattern: '^[a-zA-Z0-9]+$'
    search_param:
      free_text_search_operations:
        $search:
          operations:
            AND:
              - '({metadata}:{{{metadata}}})'
    metadata_path: '$.*'
  metadata_mapping:
    id: '$.uuid'
    uuid: '$.uuid'
    geometry:
      - area
      - '$.footprint'
    productType:
      - producttype
      - '$.producttype'
    platform:
      - platformname
      - '$.platformname'
    platformSerialIdentifier: '$.platformserialidentifier'
    instrument: '$.instrumentname'
    processingLevel: '$.processinglevel'
    title: '$.title'
    keyword: '$.keywords'
    abstract: '$.summary'
    orbitNumber: '$.orbitnumber'
    orbitDirection: '$.orbitdirection'
    cloudCover:
      - cloudcoverpercentage
      - '$.cloudcoverpercentage'
    startTimeFromAscendingNode:
      - start
      - '$.beginposition'
    completionTimeFromAscendingNode:
      - end
      - '$.endposition'
    downloadLink: '$.link'

    # Additional metadata provided by the providers but that don't appear in the reference spec
    linkAlternative: '$.link_alternative'
    ingestionDate: '$.ingestiondate'
    relativeOrbitNumber: '$.relativeorbitnumber'
    gmlFootprint: '$.gmlfootprint'
    format: '$.format'
    processingBaseline: '$.processingbaseline'
    filename:
      - filename
      - '$.filename'
    instrumentShortname: '$.instrumentshortname'
    size: '$.size'
    s2DatatakeId: '$.s2datatakeid'
    platformIdentifier: '$.platformidentifier'
    identifier: '$.identifier'
    raw:
      - raw
      - '$.raw'
    # storageStatus: must be one of ONLINE, STAGING, OFFLINE
    storageStatus: '{$.storage_status#get_group_name((?P<ONLINE>True)|(?P<OFFLINE>False))}'
products:
  S1_SAR_OCN:
    product_type: OCN
    collection: S1
  S1_SAR_GRD:
    product_type: GRD
    collection: S1
  S1_SAR_SLC:
    product_type: SLC
    collection: S1
  S2_MSI_L1C:
    collection: S2ST
    product_type: S2MSI1C
  S2_MSI_L2A:
    collection: S2ST
    product_type: S2MSI2A
  S3_EFR:
    product_type: OL_1_EFR___
    collection: S3
  S3_ERR:
    product_type: OL_1_ERR___
    collection: S3
  S3_OLCI_L2LFR:
    product_type: OL_2_LFR___
    collection: S3
  S3_OLCI_L2LRR:
    product_type: OL_2_LRR___
    collection: S3
  S3_SLSTR_L1RBT:
    product_type: SL_1_RBT___
    collection: S3
  S3_SLSTR_L2LST:
    product_type: SL_2_LST___
    collection: S3
  S3_LAN:
    product_type: SR_2_LAN___
    collection: S3